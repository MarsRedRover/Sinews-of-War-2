punitive_expedition = {
	group = punitive_expedition
	
	allowed_for_character = {
		can_raid_trigger = no
	}
	allowed_against_character = {
		scope:attacker = {
			OR = {
				has_opinion_modifier = { target = scope:defender modifier = raided_me_opinion } 
				has_opinion_modifier = { target = scope:defender modifier = raided_my_trade_opinion }
			}
		}
	}
	
	on_declaration = {
		on_declared_war = yes
	}
	
	cost = {
		prestige = {
			value = 0
			add = {
				value = medium_prestige_value
				desc = CB_BASE_COST
			}
			if = {
				limit = {
					scope:attacker = { government_has_flag = government_is_tribal }
				}
				multiply = {
					value = 0.5
					desc = CB_TRIBAL_COST
				}
			}

			# Bellum Justum Perk
			if = {
				limit = {
					scope:attacker = {
						has_perk = bellum_justum_perk
					}
				}
				multiply = {
					add = bellum_justum_discount_percentage
					divide = 100
					desc = CB_ATTACKER_BELLUM_JUSTUM
				}
			}

			# Dynasty Warfare Perk
			if = {
				limit = {
					scope:attacker = {
						has_dynasty = yes
						dynasty = {
							has_dynasty_perk = warfare_legacy_2
						}
					}
				}
				multiply = {
					value = warfare_legacy_2_discount
					desc = CB_ATTACKER_DYNASTY_WARFARE
				}
			}

			# Culture
			if = {
				limit = {
					scope:attacker = {
						culture = {
							has_cultural_parameter = cheaper_cbs
						}
					}
				}
				multiply = {
					value = 0.8
					desc = "CB_ATTACKER_CULTURE"
				}
			}
			multiply = {
				value = scope:attacker.culture.demd_vigor_CB_cost_modifier
				desc = "[vigor|E]"
			}

			# Vassal contract in-realm cost reduction
			if = {
				limit = {
					scope:attacker = {
						is_independent_ruler = no
						vassal_contract_has_flag = vassal_contract_war_override
						liege = scope:defender.liege
					}
				}
				multiply = {
					value = war_declaration_rights_allowed_cost_reduction
					desc = "CB_ATTACKER_VASSAL_CONTRACT"
				}
			}

			if = {
				limit = {
					has_game_rule = no_cost_casus_belli_costs
				}
				multiply = {
					value = 0
					desc = CB_GAME_RULE_NO_COST
				}
			}
		}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:defender = { is_local_player = yes }
				}
				desc = punitive_expedition_war_victory_desc_defender
			}
			desc = punitive_expedition_war_victory_desc
		}
	}
	
	on_victory = {
		demd_vigor_attacker_victory_effect_no_target = yes
		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_low_effect = yes }
		scope:attacker = { show_pow_release_message_effect = yes }
		
		scope:defender = {
			if = {
				limit = {
					monthly_character_income > 0
				}
				pay_short_term_income = {
					years = 5
					target = scope:attacker
				}
			}
			else = {
				pay_short_term_gold = {
					target = scope:attacker
					gold = major_gold_value
				}
			}
		}
		
		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}
		
		# Truce
		add_truce_attacker_victory_effect = yes
	}

	on_white_peace_desc = {
		desc = artifact_war_white_peace_desc
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		desc = artifact_war_defeat_desc
	}
	
	on_defeat = {
		demd_vigor_defender_victory_effect_no_target = yes
		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }
		scope:attacker = {
			show_pow_release_message_effect = yes
		}

		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_attacker_defeat_effect = yes
	}
	
	should_invalidate = {
	}
	
	on_invalidated = {
	}
	
	on_invalidated_desc = {
		desc = punitive_expedition_war_invalidated_desc
	}
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	transfer_behavior = transfer
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "PUNITIVE_EXPEDITION_WAR_NAME"
	cb_name_no_target = "PUNITIVE_EXPEDITION_WAR_NAME_FALLBACK"
	
	interface_priority = 1000
	
	ticking_war_score_targets_entire_realm = yes
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
	attacker_ticking_warscore = 0
	attacker_wargoal_percentage = 0.8
	
	max_ai_diplo_distance_to_title = 500
	
	should_show_war_goal_subview = no
	
	ai_score = {
		value = 10
	}
}